//Hide mfl
#pragma once
class vector
{private:
	int vect[10];
	int n;
public:
	vector(void); //constructor
	~vector(void); //destructor

	//metodos que puedo hacer con el vector
	void cargarvector(int vec[], int n); 
	void mostrar(int vec[],int n);
	void ordenarvector(int vec[],int n);
};

//1er cpp
#include "StdAfx.h"
#include "vector.h"
#include <iostream>
using namespace std;


vector::vector(void)
{
}


vector::~vector(void)
{
}
void vector::cargarvector(int vec[], int n)
{	int i;
	for (i=0;i<n;i++)
	{cout<<"V["<<i<<"] = ";
	cin>>vec[i];
	}
}
void vector::mostrar(int vec[],int n)
{	int i;
	for(i=0;i<n;i++)
	{cout<<vec[i]<<"|| ";
	}
	cout<<endl;
}
void vector::ordenarvector(int vec[],int n)
{int i,aux;
	for(i=0;i<(n-1);i++)
	{for(int j=i;j<n;j++)
	{	if(vec[i]< vec[j])
			{aux = vec[i];
			 vec[i]=vec[j];
			 vec[j]=aux;
			}
	}
	}
}

		
	
//2do cpp
// Ejercicios.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "vector.h"
#include <iostream>
#include "conio.h"
using namespace std;

#define Max 10

void main ()
{	vector vector1; //declarando el objeto vector1 de la clase vector
	int N,V[Max],opc;
	do
	{
	cout<<"Ingrese el tamanio del vector"<<endl;
	cin>>N;
	}while(N>Max || N<0);
	do
	{cout<<"-----------MENU----------"<<endl;
	 cout<<"[1] Cargar Vector "<<endl;
	 cout<<"[2] Mostrar Vector "<<endl;
	 cout<<"[3] Ordenar Vector "<<endl;
	 cout<<"[0] Salir "<<endl;
	 cout<<"Elija una opcion"<<endl;
	 cin>>opc;
	 switch(opc)
	 {case 1:
		{vector1.cargarvector(V,N); //Llamar al metodo
		 break;
		}
	 case 2:
		 {vector1.mostrar(V,N);
		  break;
		 }
	 case 3:
		 {vector1.ordenarvector(V,N);
		  break;
		 }
	 case 0:
		 {cout<<"Salir";
		  break;
		 }
	 default:
		 {cout<<"Opcion invalida"<<endl;
		  break;
		 }
	 }
	}while(opc!=0);
	getch();
	
}
